generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model Code {
  id       Int    @id @default(autoincrement()) 
  question String @db.Text
  answer   String @db.Text
  likes    Int    @default(0)
  createdBy User @relation("MyCodes",fields: [userId],references: [id])
  userId   String 
  likedUsers Liked[]  @relation("LikedCodes")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  MyCodes    Code[] @relation("MyCodes")
  LikedCodes Liked[] @relation("LikedUsers")
}

model Liked{
        id Int @id @default(autoincrement())
        user User? @relation("LikedUsers",fields: [userId],references: [id])
        userId String?
        code Code @relation("LikedCodes",fields: [codeId],references: [id])
        codeId Int
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@id([identifier, token])
}
